import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
	id 'com.github.johnrengelman.shadow' version '8.1.1'
	id 'java'
	id 'application'
	id("org.owasp.dependencycheck") version "8.3.1"
	id 'maven-publish'
	id "com.diffplug.spotless" version "6.19.0"
	id "org.sonarqube" version "4.2.0.3129"
	id 'jacoco'
}


group = 'com.github.caio_silva.hipb'
version = '0.0.1'

application {
	mainModule = 'com.github.caiosilva.hibp'
	mainClass = 'com.github.caiosilva.hibp.Application'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
	mavenLocal()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		mavenLocal()
	}
}


dependencies {
	shadow gradleApi()

	annotationProcessor 'org.projectlombok:lombok:1.18.28'

	implementation 'org.projectlombok:lombok:1.18.28'
	implementation 'commons-codec:commons-codec:1.15'
	implementation 'com.bucket4j:bucket4j-core:8.3.0'
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
	implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
	implementation 'com.squareup.retrofit2:retrofit:2.9.0'

	implementation 'org.slf4j:slf4j-api:2.0.7'
	implementation 'ch.qos.logback:logback-classic:1.4.8'
	implementation 'ch.qos.logback:logback-core:1.4.8'

	testImplementation 'org.mockito:mockito-core:5.3.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.3'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'
		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		removeUnusedImports()
		toggleOffOn()
		cleanthat()
		trimTrailingWhitespace()
		endWithNewline()
		formatAnnotations()
		importOrderFile('eclipseStyle.importorder')
		eclipse('4.26').configFile('eclipseStyle.xml')
		licenseHeader '/* https://github.com/caio-silva/hibp (C)$YEAR */'
	}
}

tasks.register('spotlessPreBuild') {
	dependsOn 'spotlessApply'
}

sonar {
	properties {
		property "sonar.projectKey", "caio-silva_hibp"
		property "sonar.organization", "caio-silva"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

jacoco {
	toolVersion = "0.8.10"
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacocoTestReport {
	reports {
		xml.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

// Rename the original 'jar' task to avoid conflicts
//tasks.named('shadowJar', ShadowJar) {
//	enableRelocation true
//
//	project.configurations.implementation.canBeResolved = true
//	configurations = [project.configurations.implementation]
//
//	mergeServiceFiles()
//
//	minimize()
//
//	manifest {
//		attributes(
//				'Main-Class': 'com.github.caiosilva.hibp.Application',
//				'Implementation-Title': project.name,
//				'Implementation-Version': project.version,
//				'Description': 'Java API for https://haveibeenpwned.com/api/v3/'
//		)
//	}
//
//}

tasks.named('build') {
	dependsOn 'spotlessPreBuild'
	dependsOn 'jacocoTestReport'
}
