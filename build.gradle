plugins {
	id 'java'
	id 'maven-publish'
	id "com.diffplug.spotless" version "6.19.0"
	id "org.sonarqube" version "4.2.0.3129"
	id 'jacoco'
}

group = 'com.github.caio_silva.hipb'
version = '0.0.1'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
	mavenLocal()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		mavenLocal()
	}
}

dependencies {
	implementation 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'
	implementation 'commons-codec:commons-codec:1.15'
//	implementation 'com.google.guava:guava:32.0.0-jre'
	implementation 'com.bucket4j:bucket4j-core:8.3.0'
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
	implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
	implementation 'com.squareup.retrofit2:retrofit:2.9.0'

	testImplementation 'org.mockito:mockito-core:5.3.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// don't need to set target, it is inferred from java

		importOrder()
		removeUnusedImports()
		cleanthat()
		// apply a specific flavor of google-java-format
		googleJavaFormat('1.8').aosp().reflowLongStrings().groupArtifact('com.google.googlejavaformat:google-java-format')

		// fix formatting of type annotations
		formatAnnotations()
		// make sure every file has the following copyright header.
		// optionally, Spotless can set copyright years by digging
		// through git history (see "license" section below)
		licenseHeader '/* (C)$YEAR */'
	}
}

tasks.register('spotlessPreBuild') {
	dependsOn 'spotlessApply'
}

sonar {
	properties {
		property "sonar.projectKey", "caio-silva_hibp"
		property "sonar.organization", "caio-silva"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

jacoco {
	toolVersion = "0.8.10"
//	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacocoTestReport {
	reports {
		xml.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

tasks.named('build') {
	dependsOn 'spotlessPreBuild'
	dependsOn 'jacocoTestReport'
}
